version: '2.4'

services:
  airflow:
    image: la-metro-dashboard
    build: .
    container_name: la-metro-dashboard
    stdin_open: true
    tty: true
    environment:
      - AIRFLOW_HOME=/app
      - AIRFLOW__CORE__FERNET_KEY=38H0RL0YR-fNb2YTbNIAD9CX-1NBcnHNwpJzGlLY5X4=
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql://postgres:postgres@dashboard_postgres:5432/la_metro_dashboard
      - AIRFLOW_DIR_PATH=${PWD}
      - GPG_KEYRING_PATH=${GPG_KEYRING_PATH}
      - LA_METRO_DATABASE_URL=postgresql://postgres:postgres@postgres:5432/lametro
      - LA_METRO_DOCKER_IMAGE_TAG=main
      - AIRFLOW__SENTRY__SENTRY_DSN=
      - AIRFLOW__SENTRY__ENVIRONMENT=dev
    networks:
      - app_net
    ports:
      - 8080:8080
    depends_on:
      dashboard_postgres:
        condition: service_healthy
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
    command: airflow webserver -p 8080

  dashboard_postgres:
    container_name: la-metro-dashboard-postgres
    image: postgres:11
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_DB=la_metro_dashboard
      - POSTGRES_PASSWORD=postgres
    networks:
      - app_net
    volumes:
      - la-metro-dashboard-db-data:/var/lib/postgresql/data
    ports:
      - 32001:5432

  scheduler:
    image: la-metro-dashboard
    build: .
    container_name: la-metro-dashboard-scheduler
    restart: always
    # Allow container to be attached to, e.g., to access the pdb shell
    stdin_open: true
    tty: true
    environment:
      - AIRFLOW_HOME=/app
      - AIRFLOW_DIR_PATH=${PWD}
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql://postgres:postgres@dashboard_postgres:5432/la_metro_dashboard
      - DOCKER_NETWORK=la-metro-councilmatic_default
      - GPG_KEYRING_PATH=${GPG_KEYRING_PATH}
      - LA_METRO_DATABASE_URL=postgresql://postgres:postgres@postgres:5432/lametro
      - LA_METRO_DOCKER_IMAGE_TAG=main
      - SENTRY_ENVIRONMENT=dev
    env_file:
      - .env
    networks:
      - app_net
    depends_on:
      dashboard_postgres:
        condition: service_healthy
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
    command: airflow scheduler

volumes:
  la-metro-dashboard-db-data:

networks:
  app_net:
    name: la-metro-councilmatic_default
